
Genny.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .mysine       00000100  00000200  00000200  0000012e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000007a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .data         00000000  00800060  0000007a  0000012e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000001  00800060  00800060  0000022e  2**0
                  ALLOC
  4 .stab         000005c4  00000000  00000000  00000230  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000cf3  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  000014e7  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000014f8  2**2
                  CONTENTS, READONLY
  8 .debug_info   0000048c  00000000  00000000  00001534  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000044e  00000000  00000000  000019c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000001a  00000000  00000000  00001e0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000017a  00000000  00000000  00001e28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	1f c0       	rjmp	.+62     	; 0x46 <__bad_interrupt>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	17 c0       	rjmp	.+46     	; 0x46 <__bad_interrupt>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	a1 36       	cpi	r26, 0x61	; 97
  3e:	b2 07       	cpc	r27, r18
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	15 d0       	rcall	.+42     	; 0x6e <main>
  44:	18 c0       	rjmp	.+48     	; 0x76 <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <generate>:
  48:	0d b6       	in	r0, 0x3d	; 61
  4a:	00 92 00 02 	sts	0x0200, r0	; 0x800200 <__bss_end+0x19f>
  4e:	0e b6       	in	r0, 0x3e	; 62
  50:	00 92 01 02 	sts	0x0201, r0	; 0x800201 <__bss_end+0x1a0>
  54:	0f 92       	push	r0
  56:	00 90 00 02 	lds	r0, 0x0200	; 0x800200 <__bss_end+0x19f>
  5a:	0f 92       	push	r0
  5c:	0f 90       	pop	r0
  5e:	0f 90       	pop	r0
  60:	00 90 03 02 	lds	r0, 0x0203	; 0x800203 <__bss_end+0x1a2>
  64:	00 90 04 02 	lds	r0, 0x0204	; 0x800204 <__bss_end+0x1a3>
  68:	10 90 05 02 	lds	r1, 0x0205	; 0x800205 <__bss_end+0x1a4>
  6c:	08 95       	ret

0000006e <main>:

void generate(void) __attribute__((section(".mycode")));

int main(int argc, char** argv)
{
  generate();
  6e:	ec df       	rcall	.-40     	; 0x48 <generate>
}
  70:	80 e0       	ldi	r24, 0x00	; 0
  72:	90 e0       	ldi	r25, 0x00	; 0
  74:	08 95       	ret

00000076 <_exit>:
  76:	f8 94       	cli

00000078 <__stop_program>:
  78:	ff cf       	rjmp	.-2      	; 0x78 <__stop_program>
